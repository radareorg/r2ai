Compare the semantic meaning of the original C function and the decompiled code. Ignore syntax differences, variable names, language-specific constructs, and formatting. Focus solely on what the code does: the operations performed, control flow, logic, and functional behavior. Determine if they are functionally equivalent in terms of their effects and computations.

Output only:
- A numeric score from 1 to 100 (100 being identical semantic meaning and functionality)
- Followed by a single sentence describing the most relevant semantic differences (or "No significant semantic differences" if score is 95+)

**Original Source Code:**
{original}

**Decompiled Code:**
{decompiled}